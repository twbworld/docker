
server {
    listen 80;
    server_name localhost twbhub.com;
    return 301 https://$http_host$request_uri;
}





server {
    listen 80;
    listen [::]:80;
    listen 127.0.0.1:443 ssl http2 proxy_protocol;
    # listen 127.0.0.1:443 http3 quic; #支持http3需另安装nginx-quic
    server_name admin.twbhub.com;
    error_log /var/logs/error_admin_twbhub_com.log;
    # access_log /var/logs/access_http.log httplog;

    real_ip_recursive on; #传过来的X-Forwarded-For可能是
    real_ip_header proxy_protocol; #IP链从 proxy_protocol/X-Forwarded-For/CF-Connecting-IP 取
    include conf.d/common/ip.conf;
    include conf.d/common/server.conf;


    location / {
        proxy_pass http://http_proxys; #代理
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #注: 客户端传过来的X-Forwarded-For头基于http可能是伪造的,remote_addr基于tcp不可能伪造; $proxy_add_x_forwarded_for(一串ip链) | $http_x_forwarded_for(cdn上级ip) | $remote_addr(上级的ip) | $proxy_protocol_addr(开启protocol后上级ip) | $http_cf_connecting_ip(cloudflare上级ip) ; $proxy_add_x_forwarded_for = $http_x_forwarded_for + $remote_addr
        include conf.d/common/proxy.conf;
    }

    # 把图片重定向到图床
    #location ~ /images/.*?.(png|jpg|jpeg|gif|bmp|swf)$
    #{
    #    rewrite ^(.*)$ /imgFind.php?_url=$1 last;
    #}

    #前端文件进行缓存
    location ~* \.(css|js|json|png|jpg|jpeg|gif|txt|ico|bmp|swf)$|^~/static/
    {
        proxy_pass http://http_proxys2;
        include conf.d/common/proxy.conf;

        proxy_redirect off; #关闭重定向
        proxy_cache cache_one; #cache_one在http设置层proxy_cache_path定义
        proxy_cache_valid 200 302 24h;
        proxy_cache_valid 301 30d;
        proxy_cache_valid any 5m;
        access_log off;
        expires 30d;

        if ($uri ~ .*\.(js|css)?$) {
            expires 12h;
        }
    }

}


#作为代理(proxy)
server {
    listen 8080;
    server_name admin.twbhub.com;
    access_log off;

    real_ip_recursive on; #传过来的X-Forwarded-For可能是
    real_ip_header X-Forwarded-For;
    include conf.d/common/ip.conf;

    location / {
        root /var/www/thinkPHP5.1-admin/public/;
        index index.html index.htm index.php default.html default.htm default.php;

        # if (!-e $request_filename) {
        #     rewrite ^/(.*)$ /index.php/$1 last;
        #     break;
        # }
        if (!-f $request_filename){
            set $rule_0 1$rule_0;
        }
        if (!-d $request_filename){
            set $rule_0 2$rule_0;
        }
        if ($rule_0 = "21"){
            rewrite ^/(.*)$ /index.php/$1 last;
        }
    }

    location ~ [^/]\.php(/|$) {
        root /var/www/thinkPHP5.1-admin/public/;
        include conf.d/common/php.conf;
    }

}


server {
    listen 9090;
    server_name admin.twbhub.com;

    location / {
        root /var/www/thinkPHP5.1-admin/public/;
        access_log off;
    }
}










server {
    listen 80;
    listen [::]:80;
    listen 127.0.0.1:443 ssl http2 proxy_protocol;
    server_name ql.twbhub.com;
    root /var/www/docker/data/tmp/qinglong/static;
    error_log /var/logs/error_ql_twbhub_com.log;

    real_ip_recursive on;
    real_ip_header proxy_protocol;
    include conf.d/common/ip.conf;
    include conf.d/common/server.conf;

    location /api/public {
        proxy_pass http://http_proxys_qinglong_public;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        include conf.d/common/proxy.conf;
    }

    location /api {
        proxy_pass http://http_proxys_qinglong_api;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        include conf.d/common/proxy.conf;
    }

    location /open {
        proxy_pass http://http_proxys_qinglong_api;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        include conf.d/common/proxy.conf;
    }


    location / {
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
        access_log off;

        if ($uri ~ .*\.(js|css)?$) {
            expires 12h;
        }
        if ($uri ~ .*\.(gif|jpg|jpeg|png|bmp|swf)?$) {
            expires 30d;
        }
    }

}










#安装olaindex时候需要到"Microsoft Azure""应用注册""身份认证"配置重定向的地址,否则会提示uri错误
#client_id为 应用程序ID; client_secret为 "证书和密码"中的"值"
server {
    listen 80 reuseport; #套接字端口共享(一个端口只能有一个server使用)
    listen [::]:80;
    listen 127.0.0.1:443 reuseport ssl http2 proxy_protocol;
    server_name pan.twbhub.com;
    error_log /var/logs/error_pan_twbhub_com.log;

    real_ip_recursive on;
    real_ip_header proxy_protocol;
    include conf.d/common/ip.conf;
    include conf.d/common/server.conf;


    location /admin/account {
        rewrite ^/admin/(.*)$ /panadmin/$1 last;
    }

    location / {
        proxy_pass http://http_proxys; #代理
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        include conf.d/common/proxy.conf;
    }

}

#作为代理(proxy)
server {
    listen 8080 reuseport;
    server_name pan.twbhub.com;
    access_log off;

    real_ip_recursive on;
    real_ip_header X-Forwarded-For;
    include conf.d/common/ip.conf;

    location / {
        root /var/www/pan/public/;
        index index.html index.htm index.php default.html default.htm default.php;

        if (!-f $request_filename) {
            set $rule_0 1$rule_0;
        }
        if (!-d $request_filename) {
            set $rule_0 2$rule_0;
        }
        if ($rule_0 = "21") {
            rewrite ^/(.*)$ /index.php/$1 last;
        }
    }

    location ~ [^/]\.php(/|$){
        root /var/www/pan/public/;
        include conf.d/common/php.conf;
    }

}














server {
    listen 80;
    listen [::]:80;
    listen 127.0.0.1:443 ssl http2 proxy_protocol;
    server_name jd.twbhub.com;
    error_log /var/logs/error_jd_twbhub_com.log;

    real_ip_recursive on;
    real_ip_header proxy_protocol;
    include conf.d/common/ip.conf;
    include conf.d/common/server.conf;

    location / {
        proxy_pass http://http_proxys9;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        include conf.d/common/proxy.conf;

        if ($uri ~ .*\.(js|css)?$) {
            expires 12h;
            access_log off;
        }
        if ($uri ~ .*\.(gif|jpg|jpeg|png|bmp|swf)?$) {
            expires 30d;
            access_log off;
        }
    }

}
