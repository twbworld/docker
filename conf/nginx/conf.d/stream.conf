#四层网络

stream {

    log_format streamlog '$remote_addr -  [$time_local]  $status $protocol'
                ' "$upstream_addr" "$upstream_bytes_sent" "$upstream_connect_time"';
    access_log /var/www/logs/access_stream.log streamlog;

    #使用SNI分流(只能用于Tls)
    map $ssl_preread_server_name $stream_map {
        t.twbhub.top trojan_proxys;
        default web_server; #默认
    }

    upstream web_server {
        # hash $remote_addr consistent;
        server 127.0.0.1:443 weight=1 max_fails=3 fail_timeout=10s;
    }

    upstream trojan_proxys {
        server 127.0.0.1:4430 weight=1 max_fails=3 fail_timeout=10s;
    }


    upstream trojan_server {
        server trojan:443 weight=1 max_fails=3 fail_timeout=10s;
    }


    server {
        #为了实现stream层和http层可同时监听443,需要绑定对外ip(公网ip或容器ip)
        listen 172.1.1.99:443 reuseport;
        proxy_pass $stream_map;
        proxy_connect_timeout 3s;
        proxy_timeout 60s;
        ssl_preread on;
        proxy_protocol on;
    }

    server {
        #因为上一层开启了Proxy protocol,为了trojan获得真实的客户端ip,这里再加一层代理作为 与trojan的"媒人",去掉Proxy protocol这层外衣,把最原始的TCP流传递给trojan
        #https://blog.xmgspace.me/archives/nginx-sni-dispatcher.html
        listen 127.0.0.1:4430 proxy_protocol;
        proxy_pass trojan_server;
        set_real_ip_from 127.0.0.0/24; #真实的ip,跳过此ip段
        set_real_ip_from 172.1.1.0/24;
    }

}
