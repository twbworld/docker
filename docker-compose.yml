version: "3.9"

#创建网桥
networks:
    net1:
        name: my_net
        driver: bridge #指定网络模式
        ipam:
            driver: default
            config:
                - subnet: 172.1.1.0/24 #指定ip段

#创建卷
# volumes:
#     logs_volume:
#         name: logs_volume_name #在宿主机的目录名

# 定义日志模板
x-logging: &default-logging
    driver: json-file
    options:
        max-size: "200k"
        max-file: "10"

services:
    nginx:
        image: nginx:${nginx:-latest}
        container_name: nginx
        hostname: docker-nginx
        depends_on:
          - php
          - mysql
          # - trojan
        restart: always
        working_dir: /var/www/html/ #进入容器的默认目录
        environment:
          TZ: ${TZ:-Asia/Shanghai}
        ports:
            - 80:80
            - 443:443
        volumes:
            - ${PWD}/conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro #nginx根配置
            - ${PWD}/conf/nginx/vhost/:/etc/nginx/conf.d/:ro #nginx配置
            - ${PWD}/../../html/:/var/www/html/:rw
            - ${PWD}/data/logs/nginx/:/var/www/logs/:rw #日志
        logging: *default-logging
        networks:
            net1:
                ipv4_address: 172.1.1.99
                aliases:
                  - nginx
                  - docker-nginx
                  - twbhub.com
                  - twbhub.top

    php:
        # build:
        #     context: ${PWD}/conf/php-phalcon-swoole-redis
        #     dockerfile: Dockerfile
        image: ghcr.io/twbworld/php-phalcon-swoole-redis:${php:-latest}
        container_name: php
        hostname: docker-php
        depends_on:
            - mysql
        command: /bin/bash -c "docker-php-entrypoint php-fpm && service cron start && chmod +x /etc/cron.monthly/*" #启动cron
        restart: always
        working_dir: /var/www/html/ #进入容器的默认目录
        environment:
            TZ: ${TZ:-Asia/Shanghai}
        ports:
            - 9000:9000
            - 9501:9501
        volumes:
            - ${PWD}/../../html/:/var/www/html/:rw
            - ${PWD}/conf/php/php.ini:/usr/local/etc/php/php.ini:ro #php配置
            - ${PWD}/conf/php/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro #php配置
            - /root/.ssh/id_rsa:/var/www/.ssh/id_rsa:ro #ssh私钥,用于github验证
            - /root/.ssh/known_hosts:/var/www/.ssh/known_hosts:ro #记录github服务器的白名单
            - ${PWD}/data/logs/php/:/var/www/logs/:rw #日志
        logging: *default-logging
        networks:
            net1:
                ipv4_address: 172.1.1.98
                aliases:
                  - php
                  - docker-php
                  - php7

    mysql:
        image: mysql:${mysql:-latest}
        container_name: mysql
        hostname: docker-mysql
        depends_on:
          - mysql
        restart: always
        command: /bin/bash -c "chown -R www-data:www-data /var/lib/mysql /var/run/mysqld &&  mysqld"
        environment: #设置环境变量
            TZ: ${TZ:-Asia/Shanghai}
        ports:
            - 3306:3306
        volumes:
            - /usr/local/mysql8-docker/data/:/var/lib/mysql:rw #库数据,一旦使用,设置的环境变量和自动执行sql功能则失效
            - ${PWD}/conf/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro #配置文件
            - ${PWD}/data/logs/mysql/:/var/www/logs/:rw #日志
        logging: *default-logging
        networks:
            net1:
                ipv4_address: 172.1.1.97
                aliases:
                  - mysql
                  - docker-mysql
                  - mysql8

    # trojan:
    #     image: ghcr.io/twbworld/v2ray-trojan:${trojan:-latest}
    #     container_name: trojan
    #     hostname: docker-trojan
    #     tty: true
    #     privileged: true
    #     command: /bin/bash -c "/sbin/init"
    #     depends_on:
    #         - mysql
    #     restart: always
    #     environment: #设置环境变量
    #         TZ: ${TZ:-Asia/Shanghai}
    #     volumes:
    #         - ${PWD}/../docker/:/root/docker/:rw
    #         - /etc/localtime:/etc/localtime:ro
    #         - /root/.ssh/id_rsa:/var/www/.ssh/id_rsa:ro #ssh私钥,用于github验证
    #         - /root/.ssh/known_hosts:/var/www/.ssh/known_hosts:ro #记录github服务器的白名单
    #     logging: *default-logging
    #     networks:
    #         net1:
    #             ipv4_address: 172.1.1.96
    #             aliases:
    #               - trojan
    #               - docker-trojan
    #               - trojan-go

    blbl:
        image: superng6/bilibili-helper:${blbl:-latest}
        container_name: blbl
        hostname: docker-blbl
        restart: always
        working_dir: /app
        # env_file: ./.env
        environment:
            TZ: ${TZ:-Asia/Shanghai}
            PUID: ${PUID:-33}
            PGID: ${PGID:-33}
            TASK: ${TASK:-1d} #执行间隔1d=一天
            CUSP: ${CUSP:-false} #自定义配置文件
            CRON: ${CRON:-false} #true时会禁用task，使用cron
            DEDEUSERID:
            SESSDATA:
            BILI_JCT:
            TELEGRAMBOTTOKEN: #tg-bot推送token
            TELEGRAMCHATID:
            #SERVERPUSHKEY: token #消息推送token
        volumes:
            - ${PWD}/conf/bilibili/config.json:/app-conf/config.json:ro
        logging: *default-logging
        networks:
          net1:
              ipv4_address: 172.1.1.95
              aliases:
                - bilibili
                - docker-blbl
